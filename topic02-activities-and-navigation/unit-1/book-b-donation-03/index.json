


  {
  
  
    "properties" : {},
  
  "type" : "lab",
  "title" : "Lab-03",
  "img" : "img/main.png",
  "videoid" : "none",
  "objectives" : "<p>In this version of our Donation Case Study App, called <b>Donation.3.0</b> we evolve the Donation Android app to include a Donation Object Model and Base class. We also use a CustomAdapter in the Report View and refactor our menus with xml driven event handling.</p>",
  "folder" : "book-b-donation-03",
  "link" : "index.html",
  "los": [
   ]
,
  "chapters" : [
  
    {
    "title": "# Objectives",
    "shortTitle": "Lab-03",
    "contentMd" : "# Objectives\n\nIn this version of our Donation Case Study App, called <b>Donation.3.0</b> we evolve the Donation Android app to include a Donation Object Model and Base class. We also use a CustomAdapter in the Report View and refactor our menus with xml driven event handling.\n\n<b>NOTE : These Labs we build in a previous Version to Android Studio 3.0 so be aware that some images and instructions may not be up to date. Also, when replacing any XML with that from the Lab, the Widgets will not be 'anchored' so it would be advisable to go ahead and 'anchor' your widgets to improve the future design of your layouts.</b>\n"
    },
  
    {
    "title": "# Donation Model & Base Class",
    "shortTitle": "01",
    "contentMd" : "# Donation Model & Base Class\n\n\nIn order to keep our application design coherent, we now bring in a **Base** class and a **Donation** class to manage our Donations. You can continue with your own version of the app or start with the solution from the previous lab - [Donation.2.0](archives/Donation.2.0.zip)\n\nBut before you do anything, it's probably a good idea to rename/copy your project to <b>Donation.3.0</b> like you did in the previous lab - so go ahead and do that now (just make sure it's not open in Android Studio before you go renaming files!, and don't forget to update your **app_name** resource in your **strings.xml**)\n\nNow, first, create a new package called **ie.app.models** in 'main' and bring in this class here:\n\n~~~java\npackage ie.app.models;\n\npublic class Donation\n{\n  public int    amount;\n  public String method;\n\n  public Donation (int amount, String method)\n  {\n    this.amount = amount;\n    this.method = method;\n  }\n}\n~~~\n\nNext, Create a new class called 'Base' and add it to the **ie.app.activities** package: (and fix the errors :-) )\n\n~~~java\npublic class Base extends AppCompatActivity\n{\n  public final  int            target       = 10000;\n  public        int            totalDonated = 0;\n  public static List<Donation> donations    = new ArrayList<Donation>();\n\n  public boolean newDonation(Donation donation)\n  {\n    boolean targetAchieved = totalDonated > target;\n    if (!targetAchieved)\n    {\n      donations.add(donation);\n      totalDonated += donation.amount;\n    }\n    else {\n      Toast.makeText(this, \"Target Exceeded!\", Toast.LENGTH_SHORT).show();\n    }\n    return targetAchieved;\n  }\n\n  @Override\n  public boolean onCreateOptionsMenu(Menu menu)\n  {\n    getMenuInflater().inflate(R.menu.menu_donate, menu);\n    return true;\n  }\n\n  @Override\n  public boolean onPrepareOptionsMenu (Menu menu){\n      super.onPrepareOptionsMenu(menu);\n      MenuItem report = menu.findItem(R.id.menuReport);\n      MenuItem donate = menu.findItem(R.id.menuDonate);\n\n      if(donations.isEmpty())     \n           report.setEnabled(false);\n      else\n        report.setEnabled(true);\n\n      if(this instanceof Donate){\n          donate.setVisible(false);\n          if(!donations.isEmpty())     \n                report.setVisible(true);\n        }\n      else {\n        report.setVisible(false);\n        donate.setVisible(true);\n        }\n\n      return true;  \n  }\n\n  public void settings(MenuItem item)\n  {\n    Toast.makeText(this, \"Settings Selected\", Toast.LENGTH_SHORT).show();\n  }\n\n  public void report(MenuItem item)\n  {\n    startActivity (new Intent(this, Report.class));\n  }\n\n  public void donate(MenuItem item)\n  {\n    startActivity (new Intent(this, Donate.class));\n  }\n}\n\n~~~\n\nNotice our List of Donations in the **Base** class - we will use this list to display our Donations in the **Report** class.\n\nThere is still one error remaining, can you work out why, and more importantly, how to fix it?\n\nHint - it relates to class inheritance, and some refactoring that needs to be done.\n\nYour project should now look as follows:\n\n![](img/lab4s101.png)\n\nAlso, pay particular attention to the 'settings', 'report' and 'donate' methods - these will be triggered directly by our menu options via xml, which we'll look at in Step 05.\n"
    },
  
    {
    "title": "# Refactored Donate",
    "shortTitle": "02",
    "contentMd" : "# Refactored Donate\n\nThe **Donate** activity can now be completely refactored to make use of the **Base** class.\n\n~~~java\npublic class Donate extends Base {\n\n    private Button          donateButton;\n    private RadioGroup      paymentMethod;\n    private ProgressBar     progressBar;\n    private NumberPicker    amountPicker;\n    private EditText        amountText;\n    private TextView        amountTotal;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_donate);\n        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);\n        setSupportActionBar(toolbar);\n\n        FloatingActionButton fab = (FloatingActionButton) findViewById(R.id.fab);\n        fab.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View view) {\n                Snackbar.make(view, \"Replace with your own action\", Snackbar.LENGTH_LONG)\n                        .setAction(\"Action\", null).show();\n            }\n        });\n\n        donateButton = (Button) findViewById(R.id.donateButton);\n\n        paymentMethod = (RadioGroup)   findViewById(R.id.paymentMethod);\n        progressBar   = (ProgressBar)  findViewById(R.id.progressBar);\n        amountPicker  = (NumberPicker) findViewById(R.id.amountPicker);\n        amountText    = (EditText)     findViewById(R.id.paymentAmount);\n        amountTotal   = (TextView)     findViewById(R.id.totalSoFar);\n\n        amountPicker.setMinValue(0);\n        amountPicker.setMaxValue(1000);\n        progressBar.setMax(10000);\n        amountTotal.setText(\"$0\");\n    }\n\n    @Override\n    public boolean onCreateOptionsMenu(Menu menu) {\n        // Inflate the menu; this adds items to the action bar if it is present.\n        getMenuInflater().inflate(R.menu.menu_donate, menu);\n        return true;\n    }\n\n    @Override\n    public boolean onOptionsItemSelected(MenuItem item)\n    {\n        switch (item.getItemId())\n        {\n            case R.id.menuReport : startActivity (new Intent(this, Report.class));\n                break;\n        }\n        return super.onOptionsItemSelected(item);\n    }\n\n    public void donateButtonPressed (View view)\n    {\n        String method = paymentMethod.getCheckedRadioButtonId() == R.id.PayPal ? \"PayPal\" : \"Direct\";\n        int donatedAmount =  amountPicker.getValue();\n        if (donatedAmount == 0)\n        {\n            String text = amountText.getText().toString();\n            if (!text.equals(\"\"))\n                donatedAmount = Integer.parseInt(text);\n        }\n        if (donatedAmount > 0)\n        {\n            newDonation(new Donation(donatedAmount, method));\n            progressBar.setProgress(totalDonated);\n            String totalDonatedStr = \"$\" + totalDonated;\n            amountTotal.setText(totalDonatedStr);\n        }\n    }\n}\n~~~\n\nReplace your version with this and execute it - fix any missing import statements necessary.\n\nLook carefully at the changes to this version over the previous attempt.\n"
    },
  
    {
    "title": "# Refactored Report - Displaying our Donations",
    "shortTitle": "03",
    "contentMd" : "# Refactored Report - Displaying our Donations\n\nBefore we rework the **Report** Layout to render the actual donations held in the **Base** class list in a custom format, we will first display these donations to the LogCat and then on the actual layout, albeit in a default format.\n\n\n## Displaying our Donations to the LogCat\n\nFirst, add the following to your **donationButtonPressed** method, in a suitable location.\n\n~~~java\nLog.v(\"Donate\",\"Current Donations List is : \" + donations);\n~~~\n\nRun your app to confirm you now see the following after adding some donations :\n\n![](img/01.png)\n\nYou'll notice the donations are displayed in an unusual format - this is the actual address of the donation in memory, so to fix this we need to add a **toString()** method to our **Donation** Model, like so:\n\nSelect/Click on the Class (Donation) and choose Code->Generate\n\n![](img/02.png)\n\nthen Select **toString()**\n\n![](img/03.png)\n\nand finally the properties to display\n\n![](img/04.png)\n\nOur **Donation** Class now looks like\n\n~~~java\npublic class Donation\n{\n  public int    amount;\n  public String method;\n\n  public Donation (int amount, String method)\n  {\n    this.amount = amount;\n    this.method = method;\n  }\n\n  @Override\n  public String toString() {\n    return \"Donation{\" +\n        \"amount=\" + amount +\n        \", method='\" + method + '\\'' +\n        '}';\n  }\n}\n~~~\n\nRun your app again, add a few donations, and confirm you now get the following :\n\n![](img/05.png)\n\n\n## Displaying our Donations on Screen\n\nThis is achieved quite easily by making some simple modifications to our **Report.java** and specifically, the ***ArrayAdapter***.\n\nReplace your existing **Report.java** with the following :\n\n~~~java\npublic class Report extends Base\n{\n    ListView listView;\n\n\n    @Override\n    public void onCreate(Bundle savedInstanceState)\n    {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_report);\n\n        listView = findViewById(R.id.reportList);\n        ArrayAdapter<Donation> adapter = new ArrayAdapter<>(this,  android.R.layout.simple_list_item_1, donations);\n        listView.setAdapter(adapter);\n    }\n\n    @Override\n    public boolean onCreateOptionsMenu(Menu menu) {\n        // Inflate the menu; this adds items to the action bar if it is present.\n        getMenuInflater().inflate(R.menu.menu_donate, menu);\n        return true;\n    }\n\n    @Override\n    public boolean onOptionsItemSelected(MenuItem item)\n    {\n        switch (item.getItemId())\n        {\n            case R.id.menuDonate : startActivity (new Intent(this, Donate.class));\n                break;\n        }\n        return super.onOptionsItemSelected(item);\n    }\n}\n~~~\n\nrun your app again, and confirm you get something like the following :\n\n![](img/06.png)\n\nPay particular attention to the following lines of code\n\n~~~java\nlistView = findViewById(R.id.reportList);\nArrayAdapter<Donation> adapter = new ArrayAdapter<>(this,  android.R.layout.simple_list_item_1, donations);\nlistView.setAdapter(adapter);\n~~~\n\nthis is how the ***donations*** list is rendered on the screen.\n\nHere's the solution so far - [Donation.3.0.1](archives/Donation.3.0.1.zip)\n"
    },
  
    {
    "title": "# Refactored Report - New 'Layout'",
    "shortTitle": "04",
    "contentMd" : "# Refactored Report - New 'Layout'\n\nWe now rework the **Report** Layout to render the actual donations - held in the **Base** class list.\n\nFirst some layout additions. Include these new string resources in **strings.xml**\n\n~~~xml\n    <string name=\"defaultAmount\">00</string>\n    <string name=\"defaultMethod\">N/A</string>\n~~~\n\nThis is a new layout - to be called '**row_donate.xml**'. Place this in the 'layout' folder.\n\n~~~xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<android.support.constraint.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\">\n\n    <TextView\n        android:id=\"@+id/row_amount\"\n        android:layout_width=\"82dp\"\n        android:layout_height=\"19dp\"\n        android:layout_marginEnd=\"8dp\"\n        android:layout_marginStart=\"44dp\"\n        android:layout_marginTop=\"16dp\"\n        android:text=\"@string/defaultAmount\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintHorizontal_bias=\"0.075\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\" />\n\n    <TextView\n        android:id=\"@+id/row_method\"\n        android:layout_width=\"86dp\"\n        android:layout_height=\"20dp\"\n        android:layout_marginEnd=\"8dp\"\n        android:layout_marginStart=\"8dp\"\n        android:layout_marginTop=\"16dp\"\n        android:text=\"@string/defaultMethod\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toEndOf=\"@+id/row_amount\"\n        app:layout_constraintTop_toTopOf=\"parent\" />\n</android.support.constraint.ConstraintLayout>\n~~~\n"
    },
  
    {
    "title": "# Refactored Report - New 'Class'",
    "shortTitle": "05",
    "contentMd" : "# Refactored Report - New 'Class'\n\nFinally, rework the **Report** class to remove the hard coded values - and use a different '**adapter**'\n\n~~~java\npublic class Report extends Base\n{\n    ListView listView;\n\n    @Override\n    public void onCreate(Bundle savedInstanceState)\n    {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_report);\n\n        listView = (ListView) findViewById(R.id.reportList);\n        DonationAdapter adapter = new DonationAdapter(this,  donations);\n        listView.setAdapter(adapter);\n    }\n\n    @Override\n    public boolean onCreateOptionsMenu(Menu menu) {\n        // Inflate the menu; this adds items to the action bar if it is present.\n        getMenuInflater().inflate(R.menu.menu_donate, menu);\n        return true;\n    }\n\n    @Override\n    public boolean onOptionsItemSelected(MenuItem item)\n    {\n        switch (item.getItemId())\n        {\n            case R.id.menuDonate : startActivity (new Intent(this, Donate.class));\n                break;\n        }\n        return super.onOptionsItemSelected(item);\n    }\n}\n~~~\n\nThis is the new adapter - **DonationAdapter**. You can place this at the end of the **Report** class (outside of the closing brace) if you like:\n\n~~~java\nclass DonationAdapter extends ArrayAdapter<Donation>\n{\n  private Context        context;\n  public  List<Donation> donations;\n\n  public DonationAdapter(Context context, List<Donation> donations)\n  {\n    super(context, R.layout.row_donate, donations);\n    this.context   = context;\n    this.donations = donations;\n  }\n\n  @Override\n  public View getView(int position, View convertView, ViewGroup parent)\n  {\n    LayoutInflater inflater = (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n\n    View     view       = inflater.inflate(R.layout.row_donate, parent, false);\n    Donation donation   = donations.get(position);\n    TextView amountView = (TextView) view.findViewById(R.id.row_amount);\n    TextView methodView = (TextView) view.findViewById(R.id.row_method);\n\n    amountView.setText(\"$\" + donation.amount);\n    methodView.setText(donation.method);\n\n    return view;\n  }\n\n  @Override\n  public int getCount()\n  {\n    return donations.size();\n  }\n}\n~~~\n\nIf all goes well - then you should be able to make donations, and then see a list of them in the **Report** activity.\n\n![](img/lab4s401.png) ![](img/lab4s402.png)\n"
    },
  
    {
    "title": "# Refactored Menu - New 'Event Handling'",
    "shortTitle": "06",
    "contentMd" : "# Refactored Menu - New 'Event Handling'\n\nIf you recall from Step 01, our **Base** class has 3 particular methods that we haven't made use of - yet\n\n~~~java\n  public void settings(MenuItem item)\n  {\n    Toast.makeText(this, \"Settings Selected\", Toast.LENGTH_SHORT).show();\n  }\n\n  public void report(MenuItem item)\n  {\n    startActivity (new Intent(this, Report.class));\n  }\n\n  public void donate(MenuItem item)\n  {\n    startActivity (new Intent(this, Donate.class));\n  }\n}\n~~~\n\nWe now use these methods, and using the <b>onClick</b> attribute in our *MenuItems*, we will 'bind' these methods to our menu options.\n\nFirstly, edit your **menu_donate.xml** and ensure it now looks as follows:\n\n~~~xml\n<menu xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\" tools:context=\".Donate\">\n\n    <item android:id=\"@+id/action_settings\"\n        android:title=\"@string/action_settings\"\n        android:orderInCategory=\"100\"\n        app:showAsAction=\"never\"\n        android:onClick=\"settings\"/>\n\n    <item\n        android:id=\"@+id/menuReport\"\n        android:orderInCategory=\"100\"\n        android:title=\"@string/menuReport\"\n        app:showAsAction=\"never\"\n        android:onClick=\"report\"/>\n\n    <item\n        android:id=\"@+id/menuDonate\"\n        android:orderInCategory=\"100\"\n        android:title=\"@string/menuDonate\"\n        app:showAsAction=\"never\"\n        android:onClick=\"donate\"/>\n</menu>\n~~~\n\nNOTE the added **onClick** attributes for each *MenuItem*, it directly corresponds to the method names in our **Base** class.\n\nWe can now refactor our **Donate** & **Report** classes and ***Remove*** the menu inflation and event handling code in both classes.\n\nSo, both classes should look as follows:\n\n<b>Donate</b>\n~~~java\npublic class Donate extends Base {\n\n    private Button          donateButton;\n    private RadioGroup      paymentMethod;\n    private ProgressBar     progressBar;\n    private NumberPicker    amountPicker;\n    private EditText        amountText;\n    private TextView        amountTotal;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_donate);\n        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);\n        setSupportActionBar(toolbar);\n\n        FloatingActionButton fab = (FloatingActionButton) findViewById(R.id.fab);\n        fab.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View view) {\n                Snackbar.make(view, \"Replace with your own action\", Snackbar.LENGTH_LONG)\n                        .setAction(\"Action\", null).show();\n            }\n        });\n\n        donateButton = (Button) findViewById(R.id.donateButton);\n\n        paymentMethod = (RadioGroup)   findViewById(R.id.paymentMethod);\n        progressBar   = (ProgressBar)  findViewById(R.id.progressBar);\n        amountPicker  = (NumberPicker) findViewById(R.id.amountPicker);\n        amountText    = (EditText)     findViewById(R.id.paymentAmount);\n        amountTotal   = (TextView)     findViewById(R.id.totalSoFar);\n\n        amountPicker.setMinValue(0);\n        amountPicker.setMaxValue(1000);\n        progressBar.setMax(10000);\n        amountTotal.setText(\"$0\");\n    }\n\n    public void donateButtonPressed (View view)\n    {\n        String method = paymentMethod.getCheckedRadioButtonId() == R.id.PayPal ? \"PayPal\" : \"Direct\";\n        int donatedAmount =  amountPicker.getValue();\n        if (donatedAmount == 0)\n        {\n            String text = amountText.getText().toString();\n            if (!text.equals(\"\"))\n                donatedAmount = Integer.parseInt(text);\n        }\n        if (donatedAmount > 0)\n        {\n            newDonation(new Donation(donatedAmount, method));\n            progressBar.setProgress(totalDonated);\n            String totalDonatedStr = \"$\" + totalDonated;\n            amountTotal.setText(totalDonatedStr);\n        }\n    }\n}\n~~~\n\n<b>Report</b>\n~~~java\npublic class Report extends Base\n{\n    ListView listView;\n\n    @Override\n    public void onCreate(Bundle savedInstanceState)\n    {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_report);\n\n        listView = (ListView) findViewById(R.id.reportList);\n        DonationAdapter adapter = new DonationAdapter(this,  donations);\n        listView.setAdapter(adapter);\n    }\n}\n\nclass DonationAdapter extends ArrayAdapter<Donation>\n{\n    private Context context;\n    public List<Donation> donations;\n\n    public DonationAdapter(Context context, List<Donation> donations)\n    {\n        super(context, R.layout.row_donate, donations);\n        this.context   = context;\n        this.donations = donations;\n    }\n\n    @Override\n    public View getView(int position, View convertView, ViewGroup parent)\n    {\n        LayoutInflater inflater = (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n\n        View     view       = inflater.inflate(R.layout.row_donate, parent, false);\n        Donation donation   = donations.get(position);\n        TextView amountView = (TextView) view.findViewById(R.id.row_amount);\n        TextView methodView = (TextView) view.findViewById(R.id.row_method);\n\n        amountView.setText(\"$\" + donation.amount);\n        methodView.setText(donation.method);\n\n        return view;\n    }\n\n    @Override\n    public int getCount()\n    {\n        return donations.size();\n    }\n}\n~~~\n\nRun your app once more, to confirm the changes, and that your **Menu** still works as it should.\n"
    },
  
    {
    "title": "# Exercise & Solution",
    "shortTitle": "Exercise",
    "contentMd" : "# Exercise & Solution\n\nAs a final exercise, try and add some event handling to the **Report** Activity - i.e. when the user selects a row in the Report List, display a simple toast detailing which row was selected and the donation data from that row.\n\nSomething like this:\n\n![](img/lab4s701.png)\n\nYou may find the following useful if you need to refactor your Donation model\n\n![](img/lab4s702.png)\n\nand\n\n![](img/lab4s703.png)\n\nand adding some 'Event Handling' to the List.\n\n![](img/lab4s704.png)\n\nand\n\n![](img/lab4s705.png)\n\nand\n\n![](img/lab4s706.png)\n\n\nProject Solution:\n\n- [Donation.3.0](archives/Donation.3.0.zip)\n"
    },
  
    {
    "title": "# Extra Work",
    "shortTitle": "Extra",
    "contentMd" : "# Extra Work\n\nTo help you with your assignment you might want to use a **TimePickerDialog** to allow the user to select the time like so :\n\n![](img/07.png)\n\nThis step will go someway to showing you how to do that.\n\n\nFirst add the following resources to your **strings.xml**\n\n~~~xml\n<string name=\"menuTimer\">Show Timer</string>\n<string name=\"reportTimer\">Choose a Time</string>\n<string name=\"hintTimer\">Click here to Choose a Time</string>\n~~~\n\nNext, add the following to your **menu_donate**\n\n~~~xml\n<item\n      android:id=\"@+id/menuTime\"\n      android:onClick=\"showtime\"\n      android:orderInCategory=\"100\"\n      android:title=\"@string/menuTimer\"\n      app:showAsAction=\"never\" />\n~~~\n\nNow, add a new **Empty Activity** in the **ie.app.activities** package called **ShowTime** and replace it with the following\n\n~~~java\npackage ie.app.activities;\n\nimport android.app.TimePickerDialog;\nimport android.content.Intent;\nimport android.support.v7.app.AppCompatActivity;\nimport android.os.Bundle;\nimport android.view.MenuItem;\nimport android.view.View;\nimport android.widget.EditText;\nimport android.widget.TimePicker;\n\nimport ie.app.R;\n\npublic class ShowTime extends Base {\n\n  EditText etChooseTime;\n\n  @Override\n  protected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.activity_showtime);\n\n    etChooseTime = findViewById(R.id.etChooseTime);\n  }\n\n  public void chooseTime(View view)\n  {\n    TimePickerDialog timePickerDialog = new TimePickerDialog(this, new TimePickerDialog.OnTimeSetListener() {\n      @Override\n      public void onTimeSet(TimePicker timePicker, int hourOfDay, int minutes) {\n        //Set you Time Variables here\n\n        etChooseTime.setText(String.format(\"%02d:%02d\", hourOfDay, minutes));\n      }\n    }, 12, 30, true); // true for 12hr clock\n\n    timePickerDialog.show();\n\n  }\n}\n\n~~~\n\nand replace the corresponding layout **activity_show_time** with this\n\n~~~xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<android.support.constraint.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n  xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n  xmlns:tools=\"http://schemas.android.com/tools\"\n  android:layout_width=\"match_parent\"\n  android:layout_height=\"match_parent\"\n  tools:context=\".activities.ShowTime\">\n\n  <EditText\n    android:id=\"@+id/etChooseTime\"\n    android:layout_width=\"253dp\"\n    android:layout_height=\"52dp\"\n    android:layout_marginStart=\"8dp\"\n    android:layout_marginTop=\"8dp\"\n    android:layout_marginEnd=\"8dp\"\n    android:layout_marginBottom=\"496dp\"\n    android:clickable=\"true\"\n    android:ems=\"10\"\n    android:hint=\"@string/hintTimer\"\n    android:inputType=\"time\"\n    android:onClick=\"chooseTime\"\n    android:text=\"\"\n    android:textAlignment=\"center\"\n    app:layout_constraintBottom_toBottomOf=\"parent\"\n    app:layout_constraintEnd_toEndOf=\"parent\"\n    app:layout_constraintStart_toStartOf=\"parent\"\n    app:layout_constraintTop_toBottomOf=\"@+id/textView\" />\n\n  <TextView\n    android:id=\"@+id/textView\"\n    android:layout_width=\"253dp\"\n    android:layout_height=\"62dp\"\n    android:layout_marginStart=\"8dp\"\n    android:layout_marginEnd=\"8dp\"\n    android:layout_marginBottom=\"8dp\"\n    android:text=\"@string/reportTimer\"\n    android:textColor=\"#000000\"\n    android:textSize=\"36sp\"\n    app:layout_constraintBottom_toBottomOf=\"parent\"\n    app:layout_constraintEnd_toEndOf=\"parent\"\n    app:layout_constraintStart_toStartOf=\"parent\"\n    app:layout_constraintTop_toTopOf=\"parent\"\n    app:layout_constraintVertical_bias=\"0.06\" />\n\n</android.support.constraint.ConstraintLayout>\n~~~\n\nNow run your app and you should get something like this :\n\n![](img/08.png)\n\n![](img/09.png)\n\n![](img/10.png)\n\n![](img/11.png)\n\nProject Solution:\n\n- [Donation.3.0.2](archives/Donation.3.0.2.zip)\n"
    }
  
  ]
  }

